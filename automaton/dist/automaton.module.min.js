// (c) 2017-2020 FMS_Cat - https://github.com/FMS-Cat/automaton/blob/master/LICENSE
class t{constructor(t,e){this.__automaton=t,this.deserialize(e)}get end(){return this.time+this.length}getValue(t){if(this.reset&&this.length<=t)return 0;if(this.curve){const e=this.offset+t*this.speed;return this.value+this.amp*this.curve.getValue(e)}return this.value}deserialize(t){var e,i,s,n,l,_,h,r;this.time=null!==(e=t.time)&&void 0!==e?e:0,this.length=null!==(i=t.length)&&void 0!==i?i:0,this.value=null!==(s=t.value)&&void 0!==s?s:0,this.offset=null!==(n=t.offset)&&void 0!==n?n:0,this.speed=null!==(l=t.speed)&&void 0!==l?l:1,this.amp=null!==(_=t.amp)&&void 0!==_?_:1,this.reset=t.reset,null!=t.curve&&(this.curve=this.__automaton.getCurve(t.curve),this.length=null!==(r=null!==(h=t.length)&&void 0!==h?h:this.curve.length)&&void 0!==r?r:0)}}class e{constructor(t,e){this.__items=[],this.__value=0,this.__time=-1/0,this.__head=0,this.__listeners=[],this.__automaton=t,this.deserialize(e)}get currentValue(){return this.__value}get currentTime(){return this.__time}deserialize(e){this.__items=e.items.map(e=>new t(this.__automaton,e))}reset(){this.__time=-1/0,this.__value=0,this.__head=0}subscribe(t){this.__listeners.push(t)}getValue(t){let e=this.__items.findIndex(e=>t<e.time);if(0===e)return 0;-1===e&&(e=this.__items.length);const i=this.__items[e-1];return i.end<t?i.getValue(i.length):i.getValue(t-i.time)}update(t){let e=this.__value;const i=this.__time;for(let s=this.__head;s<this.__items.length;s++){const n=this.__items[s],{time:l,end:_,length:h}=n;let r=t-l;if(r<0)break;{let u,o,a;h<=r?(r=h,u=1,a=!0,s===this.__head&&this.__head++):u=0!==h?r/h:1,i<l&&(o=!0),e=n.getValue(r),this.__listeners.forEach(i=>i({time:t,elapsed:r,begin:l,end:_,length:h,value:e,progress:u,init:o,uninit:a}))}}this.__time=t,this.__value=e}}const i=[];function s(t,e,i){return Math.min(Math.max(t,e),i)}function n(t){return t.p3-3*t.p2+3*t.p1-t.p0}function l(t){return 3*t.p2-6*t.p1+3*t.p0}function _(t){return 3*t.p1-3*t.p0}function h(t,e){return((n(e)*t+l(e))*t+_(e))*t+e.p0}function r(t,e){return(3*n(e)*t+2*l(e))*t+_(e)}function u(t,e,n){if(n<=t.p0)return e.p0;if(t.p3<=n)return e.p3;t.p1=s(t.p1,t.p0,t.p3),t.p2=s(t.p2,t.p0,t.p3);for(let e=0;e<21;e++)i[e]=h(e/20,t);let l=0;for(let t=1;t<21&&(l=t-1,!(n<i[t]));t++);let _=(l+(n-i[l])/(i[l+1]-i[l]))/20;const u=r(_,t)/(t.p3-t.p0);return.001<=u?_=function(t,e,i){for(let s=0;s<4;s++){const s=r(e,i);if(0===s)return e;e-=(h(e,i)-t)/s}return e}(n,_,t):0!==u&&(_=function(t,e,i,s){let n=0,l=0;for(let _=0;_<10&&(l=e+(i-e)/2,n=h(l,s)-t,0<n?i=l:e=l,!(1e-6<Math.abs(n)));_++);return l}(n,l/20,(l+1)/20,t)),h(_,e)}function o(t,e,i){return u({p0:t.time,p1:t.time+t.out.time,p2:e.time+e.in.time,p3:e.time},{p0:t.value,p1:t.value+t.out.value,p2:e.value+e.in.value,p3:e.value},i)}class a{constructor(t,e){this.__nodes=[],this.__fxs=[],this.__automaton=t,this.deserialize(e)}get length(){return this.__nodes[this.__nodes.length-1].time}deserialize(t){var e;this.__nodes=t.nodes.map(t=>{var e,i,s,n;return{time:null!==(e=t.time)&&void 0!==e?e:0,value:null!==(i=t.value)&&void 0!==i?i:0,in:null!==(s=t.in)&&void 0!==s?s:{time:0,value:0},out:null!==(n=t.out)&&void 0!==n?n:{time:0,value:0}}}),this.__fxs=[],null===(e=t.fxs)||void 0===e||e.forEach(t=>{var e,i,s;t.bypass||this.__fxs.push({time:null!==(e=t.time)&&void 0!==e?e:0,length:null!==(i=t.length)&&void 0!==i?i:0,row:null!==(s=t.row)&&void 0!==s?s:0,def:t.def,params:t.params})}),this.precalc()}precalc(){this.__values=new Float32Array(Math.ceil(this.__automaton.resolution*this.length)+1),this.__generateCurve(),this.__applyFxs()}getValue(t){if(t<0)return this.__values[0];if(this.length<=t)return this.__values[this.__values.length-1];{const e=t*this.__automaton.resolution,i=Math.floor(e),s=e%1,n=this.__values[i];return n+(this.__values[i+1]-n)*s}}__generateCurve(){let t=this.__nodes[0],e=0;for(let i=0;i<this.__nodes.length-1;i++){const s=t;t=this.__nodes[i+1];const n=e;e=Math.floor(t.time*this.__automaton.resolution),this.__values[n]=s.value;for(let i=n+1;i<=e;i++){const e=o(s,t,i/this.__automaton.resolution);this.__values[i]=e}}for(let i=e+1;i<this.__values.length;i++)this.__values[i]=t.value}__applyFxs(){for(let t=0;t<this.__fxs.length;t++){const e=this.__fxs[t],i=this.__automaton.getFxDefinition(e.def);if(!i)continue;const s=Math.min(this.length,e.time+e.length),n=Math.ceil(this.__automaton.resolution*e.time),l=Math.floor(this.__automaton.resolution*s);if(l<=n)continue;const _=l-n+1,h=new Float32Array(_),r={index:n,i0:n,i1:l,time:e.time,t0:e.time,t1:e.time+e.length,deltaTime:1/this.__automaton.resolution,value:0,progress:0,elapsed:0,resolution:this.__automaton.resolution,length:e.length,params:e.params,array:this.__values,getValue:this.getValue.bind(this),init:!0,state:{}};for(let t=0;t<_;t++)r.index=t+n,r.time=r.index/this.__automaton.resolution,r.value=this.__values[t+n],r.elapsed=r.time-e.time,r.progress=r.elapsed/e.length,h[t]=i.func(r),r.init=!1;this.__values.set(h,n)}}}class c{constructor(t,e={}){this.auto=this.__auto.bind(this),this.__time=0,this.__version="3.0.1",this.__resolution=1e3,this.__curves=[],this.__channels={},this.__fxDefinitions={},e.fxDefinitions&&this.addFxDefinitions(e.fxDefinitions),this.deserialize(t)}get time(){return this.__time}get version(){return this.__version}get resolution(){return this.__resolution}deserialize(t){this.__resolution=t.resolution,this.__curves=t.curves.map(t=>new a(this,t));for(const i in t.channels)this.__channels[i]=new e(this,t.channels[i])}addFxDefinitions(t){Object.entries(t).forEach(([t,e])=>{this.__fxDefinitions[t]=e}),this.precalcAll()}getFxDefinition(t){return this.__fxDefinitions[t]||null}getCurve(t){return this.__curves[t]||null}precalcAll(){Object.values(this.__curves).forEach(t=>t.precalc())}reset(){Object.values(this.__channels).forEach(t=>t.reset())}update(t){const e=Math.max(t,0);this.__time=e;for(const t of Object.values(this.__channels))t.update(this.__time)}__auto(t,e){return e&&this.__channels[t].subscribe(e),this.__channels[t].currentValue}}export default c;export{c as Automaton,e as Channel,t as ChannelItem,a as Curve};
