// (c) 2017-2020 FMS_Cat - https://github.com/FMS-Cat/automaton/blob/master/LICENSE
!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports):"function"==typeof define&&define.amd?define(["exports"],e):e((t="undefined"!=typeof globalThis?globalThis:t||self).AUTOMATON={})}(this,(function(t){"use strict";class e{constructor(t,e){this.__automaton=t,this.deserialize(e)}get end(){return this.time+this.length}getValue(t){if(this.reset&&this.length<=t)return 0;if(this.curve){const e=this.offset+t*this.speed;return this.value+this.amp*this.curve.getValue(e)}return this.value}deserialize(t){var e,i,s,n,l,o,u,h;this.time=null!==(e=t.time)&&void 0!==e?e:0,this.length=null!==(i=t.length)&&void 0!==i?i:0,this.value=null!==(s=t.value)&&void 0!==s?s:0,this.offset=null!==(n=t.offset)&&void 0!==n?n:0,this.speed=null!==(l=t.speed)&&void 0!==l?l:1,this.amp=null!==(o=t.amp)&&void 0!==o?o:1,this.reset=t.reset,null!=t.curve&&(this.curve=this.__automaton.getCurve(t.curve),this.length=null!==(h=null!==(u=t.length)&&void 0!==u?u:this.curve.length)&&void 0!==h?h:0)}}class i{constructor(t,e){this.__items=[],this.__value=0,this.__time=-1/0,this.__head=0,this.__listeners=[],this.__automaton=t,this.deserialize(e)}get currentValue(){return this.__value}get currentTime(){return this.__time}deserialize(t){var i,s;this.__items=null!==(s=null===(i=t.items)||void 0===i?void 0:i.map((t=>new e(this.__automaton,t))))&&void 0!==s?s:[]}reset(){this.__time=-1/0,this.__value=0,this.__head=0}subscribe(t){this.__listeners.push(t)}getValue(t){let e=this.__items.findIndex((e=>t<e.time));if(0===e)return 0;-1===e&&(e=this.__items.length);const i=this.__items[e-1];return i.end<t?i.getValue(i.length):i.getValue(t-i.time)}consume(t){const e=[],i=this.__time;for(let s=this.__head;s<this.__items.length;s++){const n=this.__items[s],{time:l,end:o,length:u}=n;let h=t-l;if(h<0)break;{let r,a,_;u<=h?(h=u,r=1,_=!0,s===this.__head&&this.__head++):r=0!==u?h/u:1,i<l&&(a=!0),e.push([l+h,()=>{this.__value=n.getValue(h),this.__listeners.forEach((e=>e({time:t,elapsed:h,begin:l,end:o,length:u,value:this.__value,progress:r,init:a,uninit:_})))}])}}return this.__time=t,e}}const s=21,n=[];function l(t,e,i){return Math.min(Math.max(t,e),i)}function o(t){return t.p3-3*t.p2+3*t.p1-t.p0}function u(t){return 3*t.p2-6*t.p1+3*t.p0}function h(t){return 3*t.p1-3*t.p0}function r(t,e){return((o(e)*t+u(e))*t+h(e))*t+e.p0}function a(t,e){return(3*o(e)*t+2*u(e))*t+h(e)}function _(t,e,i){if(i<=t.p0)return e.p0;if(t.p3<=i)return e.p3;t.p1=l(t.p1,t.p0,t.p3),t.p2=l(t.p2,t.p0,t.p3);for(let e=0;e<s;e++)n[e]=r(e/20,t);let o=0;for(let t=1;t<s&&(o=t-1,!(i<n[t]));t++);let u=(o+(i-n[o])/(n[o+1]-n[o]))/20;const h=a(u,t)/(t.p3-t.p0);return.001<=h?u=function(t,e,i){for(let s=0;s<4;s++){const s=a(e,i);if(0===s)return e;e-=(r(e,i)-t)/s}return e}(i,u,t):0!==h&&(u=function(t,e,i,s){let n=0,l=0;for(let o=0;o<10&&(l=e+(i-e)/2,n=r(l,s)-t,0<n?i=l:e=l,!(1e-6<Math.abs(n)));o++);return l}(i,o/20,(o+1)/20,t)),r(u,e)}function c(t,e,i){return _({p0:t.time,p1:t.time+t.outTime,p2:e.time+e.inTime,p3:e.time},{p0:t.value,p1:t.value+t.outValue,p2:e.value+e.inValue,p3:e.value},i)}class m{constructor(t,e){this.__nodes=[],this.__fxs=[],this.__automaton=t,this.deserialize(e)}get length(){return this.__nodes[this.__nodes.length-1].time}deserialize(t){var e;this.__nodes=t.nodes.map((t=>{var e,i,s,n,l,o;return{time:null!==(e=t[0])&&void 0!==e?e:0,value:null!==(i=t[1])&&void 0!==i?i:0,inTime:null!==(s=t[2])&&void 0!==s?s:0,inValue:null!==(n=t[3])&&void 0!==n?n:0,outTime:null!==(l=t[4])&&void 0!==l?l:0,outValue:null!==(o=t[5])&&void 0!==o?o:0}})),this.__fxs=[],null===(e=t.fxs)||void 0===e||e.forEach((t=>{var e,i,s;t.bypass||this.__fxs.push({time:null!==(e=t.time)&&void 0!==e?e:0,length:null!==(i=t.length)&&void 0!==i?i:0,row:null!==(s=t.row)&&void 0!==s?s:0,def:t.def,params:t.params})})),this.precalc()}precalc(){this.__values=new Float32Array(Math.ceil(this.__automaton.resolution*this.length)+1),this.__generateCurve(),this.__applyFxs()}getValue(t){if(t<0)return this.__values[0];if(this.length<=t)return this.__values[this.__values.length-1];{const e=t*this.__automaton.resolution,i=Math.floor(e),s=e%1,n=this.__values[i];return n+(this.__values[i+1]-n)*s}}__generateCurve(){let t=this.__nodes[0],e=0;for(let i=0;i<this.__nodes.length-1;i++){const s=t;t=this.__nodes[i+1];const n=e;e=Math.floor(t.time*this.__automaton.resolution),this.__values[n]=s.value;for(let i=n+1;i<=e;i++){const e=c(s,t,i/this.__automaton.resolution);this.__values[i]=e}}for(let i=e+1;i<this.__values.length;i++)this.__values[i]=t.value}__applyFxs(){for(let t=0;t<this.__fxs.length;t++){const e=this.__fxs[t],i=this.__automaton.getFxDefinition(e.def);if(!i)continue;const s=Math.min(this.length,e.time+e.length),n=Math.ceil(this.__automaton.resolution*e.time),l=Math.floor(this.__automaton.resolution*s);if(l<=n)continue;const o=l-n+1,u=new Float32Array(o),h={index:n,i0:n,i1:l,time:e.time,t0:e.time,t1:e.time+e.length,deltaTime:1/this.__automaton.resolution,value:0,progress:0,elapsed:0,resolution:this.__automaton.resolution,length:e.length,params:e.params,array:this.__values,getValue:this.getValue.bind(this),init:!0,state:{}};for(let t=0;t<o;t++)h.index=t+n,h.time=h.index/this.__automaton.resolution,h.value=this.__values[t+n],h.elapsed=h.time-e.time,h.progress=h.elapsed/e.length,u[t]=i.func(h),h.init=!1;this.__values.set(u,n)}}}t.Automaton=class{constructor(t,e={}){this.auto=this.__auto.bind(this),this.curves=[],this.channels=[],this.mapNameToChannel=new Map,this.__time=0,this.__version="4.1.0",this.__resolution=1e3,this.__fxDefinitions={},e.fxDefinitions&&this.addFxDefinitions(e.fxDefinitions),this.deserialize(t)}get time(){return this.__time}get version(){return this.__version}get resolution(){return this.__resolution}deserialize(t){this.__resolution=t.resolution,this.curves.splice(0),this.curves.push(...t.curves.map((t=>new m(this,t)))),this.mapNameToChannel.clear(),this.channels.splice(0),this.channels.push(...t.channels.map((([t,e])=>{const s=new i(this,e);return this.mapNameToChannel.set(t,s),s})))}addFxDefinitions(t){Object.entries(t).forEach((([t,e])=>{"function"==typeof e.func&&(this.__fxDefinitions[t]=e)})),this.precalcAll()}getFxDefinition(t){return this.__fxDefinitions[t]||null}getCurve(t){return this.curves[t]||null}precalcAll(){Object.values(this.curves).forEach((t=>t.precalc()))}reset(){Object.values(this.channels).forEach((t=>t.reset()))}update(t){const e=Math.max(t,0);this.__time=e;this.channels.map((t=>t.consume(this.__time))).flat(1).sort((([t],[e])=>t-e)).forEach((([t,e])=>e()))}__auto(t,e){const i=this.mapNameToChannel.get(t);return e&&i.subscribe(e),i.currentValue}},t.Channel=i,t.ChannelItem=e,t.Curve=m,Object.defineProperty(t,"__esModule",{value:!0})}));
